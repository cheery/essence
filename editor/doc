http://beta.etherpad.org/p/editor_plans

essence/editor will be used to write and edit program listings.

primary requirements of the editor:
straightforward to use
the document model follows what compiler requires
simple enough it can be re-created and modified at will
works well on different kinds of structured data
robust, doesn't break down
has a 'diff' to enable revision control
has a 'search' to enable grep



interface:

Interface is sewn up from a selection, command buffer and visual. Interface retrieves
and processes user input.

interface requirements:
entirely re-programmable by user
recognises the context of current selection
has operation modes, coupled with auxiliary non-modal config for noobs
response must never lag behind
command buffer must be a document

document:

Document is a tagged forest structure. It has a single primitive method of modifying it,
'document.splice(start, stop, data) => start, stop, data'. Further primitives are not needed.
Though, 'document.retag(item, tag) => tag', might be useful enough to find it's way in.

elements:

Every element has an optional tag. The tag is an untagged text block. There are 2-5 different elements:
sequence block - contains other elements.
text block - contains characters.
byte block - contains bytes.
number block - contains a number.
color block - contains a color (rgb,hsv,any encoding)

selection:

Selection is a pair of fingers, called 'head' and 'tail'. It has properties 'start', 'stop', 'length',
as it is a common affair to query these things from the selection.

finger:

Finger is a location, or an index, into a document. It never points to a element itself, but rather to an edge.
Selection points to an element.

document.splice:

Splice operation takes in two fingers and replaces elements between them with new elements.
The container where fingers were may collapse, so new fingers are created before and after elements.
Raw data gets a block that matches if it isn't inserted into compatible block. An incompatible block will
split apart to give in space for compatible block.

visual:

Visual is built up by the layouter. It is a drawable representation of the document, made of rectangles
annotated with graphics. It divides screen into selection space, which is used to represent and mouse pick
selection from the visual.

layouter:

Layouter is an user-reprogrammable piece, which compiles a visual from document.Â 

